{"ast":null,"code":"var _jsxFileName = \"/Users/admin/happygo/frontend/src/components/AdminDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport ParcelRequestList from './ParcelRequestList';\nimport MessageComposer from './MessageComposer';\nimport MessageList from './MessageList';\nimport NotificationService from '../services/NotificationService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminDashboard = () => {\n  _s();\n  const [parcelRequests, setParcelRequests] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const [unreadCount, setUnreadCount] = useState(0);\n  const [loading, setLoading] = useState(true);\n  const [activeTab, setActiveTab] = useState('requests');\n  useEffect(() => {\n    fetchData();\n    setupWebSocket();\n  }, []);\n  const fetchData = async () => {\n    try {\n      const [requestsResponse, messagesResponse, unreadResponse] = await Promise.all([axios.get('/api/parcel-requests'), axios.get('/api/messages/sms'), axios.get('/api/parcel-requests/unread-count')]);\n      setParcelRequests(requestsResponse.data);\n      setMessages(messagesResponse.data);\n      setUnreadCount(unreadResponse.data);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const setupWebSocket = () => {\n    NotificationService.connect(notification => {\n      if (notification.type === 'new_request') {\n        setParcelRequests(prev => [notification.data, ...prev]);\n        setUnreadCount(prev => prev + 1);\n      }\n    });\n  };\n  const handleMarkAsRead = async id => {\n    try {\n      await axios.put(`/api/parcel-requests/${id}/mark-read`);\n      setParcelRequests(prev => prev.map(req => req.id === id ? {\n        ...req,\n        isRead: true\n      } : req));\n      setUnreadCount(prev => Math.max(0, prev - 1));\n    } catch (error) {\n      console.error('Error marking as read:', error);\n    }\n  };\n  const handleMessageSent = newMessage => {\n    setMessages(prev => [newMessage, ...prev]);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Admin Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Manage parcel delivery requests and send messages to customers.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), unreadCount > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification\",\n        children: [\"You have \", unreadCount, \" unread parcel request\", unreadCount > 1 ? 's' : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `btn ${activeTab === 'requests' ? 'btn-success' : 'btn-secondary'}`,\n          onClick: () => setActiveTab('requests'),\n          style: {\n            marginRight: '10px'\n          },\n          children: [\"Parcel Requests (\", parcelRequests.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `btn ${activeTab === 'messages' ? 'btn-success' : 'btn-secondary'}`,\n          onClick: () => setActiveTab('messages'),\n          style: {\n            marginRight: '10px'\n          },\n          children: [\"Messages (\", messages.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `btn ${activeTab === 'compose' ? 'btn-success' : 'btn-secondary'}`,\n          onClick: () => setActiveTab('compose'),\n          children: \"Compose Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), activeTab === 'requests' && /*#__PURE__*/_jsxDEV(ParcelRequestList, {\n        requests: parcelRequests,\n        onMarkAsRead: handleMarkAsRead\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), activeTab === 'messages' && /*#__PURE__*/_jsxDEV(MessageList, {\n        messages: messages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), activeTab === 'compose' && /*#__PURE__*/_jsxDEV(MessageComposer, {\n        onMessageSent: handleMessageSent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminDashboard, \"s7MfnUkQag3cdMdxgU1hS57uh2w=\");\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","ParcelRequestList","MessageComposer","MessageList","NotificationService","jsxDEV","_jsxDEV","AdminDashboard","_s","parcelRequests","setParcelRequests","messages","setMessages","unreadCount","setUnreadCount","loading","setLoading","activeTab","setActiveTab","fetchData","setupWebSocket","requestsResponse","messagesResponse","unreadResponse","Promise","all","get","data","error","console","connect","notification","type","prev","handleMarkAsRead","id","put","map","req","isRead","Math","max","handleMessageSent","newMessage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","marginBottom","onClick","marginRight","length","requests","onMarkAsRead","onMessageSent","_c","$RefreshReg$"],"sources":["/Users/admin/happygo/frontend/src/components/AdminDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport ParcelRequestList from './ParcelRequestList';\nimport MessageComposer from './MessageComposer';\nimport MessageList from './MessageList';\nimport NotificationService from '../services/NotificationService';\n\nconst AdminDashboard = () => {\n  const [parcelRequests, setParcelRequests] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const [unreadCount, setUnreadCount] = useState(0);\n  const [loading, setLoading] = useState(true);\n  const [activeTab, setActiveTab] = useState('requests');\n\n  useEffect(() => {\n    fetchData();\n    setupWebSocket();\n  }, []);\n\n  const fetchData = async () => {\n    try {\n      const [requestsResponse, messagesResponse, unreadResponse] = await Promise.all([\n        axios.get('/api/parcel-requests'),\n        axios.get('/api/messages/sms'),\n        axios.get('/api/parcel-requests/unread-count')\n      ]);\n\n      setParcelRequests(requestsResponse.data);\n      setMessages(messagesResponse.data);\n      setUnreadCount(unreadResponse.data);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const setupWebSocket = () => {\n    NotificationService.connect((notification) => {\n      if (notification.type === 'new_request') {\n        setParcelRequests(prev => [notification.data, ...prev]);\n        setUnreadCount(prev => prev + 1);\n      }\n    });\n  };\n\n  const handleMarkAsRead = async (id) => {\n    try {\n      await axios.put(`/api/parcel-requests/${id}/mark-read`);\n      setParcelRequests(prev => \n        prev.map(req => req.id === id ? { ...req, isRead: true } : req)\n      );\n      setUnreadCount(prev => Math.max(0, prev - 1));\n    } catch (error) {\n      console.error('Error marking as read:', error);\n    }\n  };\n\n  const handleMessageSent = (newMessage) => {\n    setMessages(prev => [newMessage, ...prev]);\n  };\n\n  if (loading) {\n    return (\n      <div className=\"container\">\n        <div className=\"card\">\n          <p>Loading...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"card\">\n        <h2>Admin Dashboard</h2>\n        <p>Manage parcel delivery requests and send messages to customers.</p>\n        \n        {unreadCount > 0 && (\n          <div className=\"notification\">\n            You have {unreadCount} unread parcel request{unreadCount > 1 ? 's' : ''}\n          </div>\n        )}\n\n        <div style={{ marginBottom: '20px' }}>\n          <button\n            className={`btn ${activeTab === 'requests' ? 'btn-success' : 'btn-secondary'}`}\n            onClick={() => setActiveTab('requests')}\n            style={{ marginRight: '10px' }}\n          >\n            Parcel Requests ({parcelRequests.length})\n          </button>\n          <button\n            className={`btn ${activeTab === 'messages' ? 'btn-success' : 'btn-secondary'}`}\n            onClick={() => setActiveTab('messages')}\n            style={{ marginRight: '10px' }}\n          >\n            Messages ({messages.length})\n          </button>\n          <button\n            className={`btn ${activeTab === 'compose' ? 'btn-success' : 'btn-secondary'}`}\n            onClick={() => setActiveTab('compose')}\n          >\n            Compose Message\n          </button>\n        </div>\n\n        {activeTab === 'requests' && (\n          <ParcelRequestList\n            requests={parcelRequests}\n            onMarkAsRead={handleMarkAsRead}\n          />\n        )}\n\n        {activeTab === 'messages' && (\n          <MessageList messages={messages} />\n        )}\n\n        {activeTab === 'compose' && (\n          <MessageComposer onMessageSent={handleMessageSent} />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default AdminDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}